6章

DROP TABLE my_table;
CREATE TABLE my_table (
    id INT,
    name VARCHAR(30),
    dt DATE
);

* 6.2.2
DROP TABLE my_table;
CREATE TABLE my_table (
    my_integer_column INT
);

INSERT INTO my_table VALUES
    (25),
    (-525),
    (2500252);

-- Oracle
INSERT INTO my_table VALUES (25);
INSERT INTO my_table VALUES (-525);
INSERT INTO my_table VALUES (2500252);

SELECT * FROM my_table;

-- MySQL
CREATE TABLE my_table (
    my_integer_column INT UNSIGNED
);

* 6.2.3
DROP TABLE my_table;
CREATE TABLE my_table (
    my_decimal_column DECIMAL(5,2)
);

INSERT INTO my_table VALUES
    (123.45),
    (-123),
    (12.3);

-- Oracle
INSERT INTO my_table VALUES (123.45);
INSERT INTO my_table VALUES (-123);
INSERT INTO my_table VALUES (12.3);

SELECT * FROM my_table;

* 6.2.4
DROP TABLE my_table;

-- MySQL
CREATE TABLE my_table (
    my_float_column FLOAT,
    my_double_column DOUBLE
);

-- Oracle
CREATE TABLE my_table (
    my_float_column BINARY_FLOAT,
    my_double_column BINARY_DOUBLE
);

-- PostgreSQL
CREATE TABLE my_table (
    my_float_column REAL,
    my_double_column DOUBLE PRECISION
);

-- SQL Server
CREATE TABLE my_table (
    my_float_column REAL,
    my_double_column FLOAT
);

-- SQLite
CREATE TABLE my_table (
    my_float_column REAL,
    my_double_column REAL
);

INSERT INTO my_table VALUES (123.45, 123.45);
INSERT INTO my_table VALUES (-12345.6789, -12345.6789);
INSERT INTO my_table VALUES (1234567.890123456789, 1234567.890123456789);

SELECT * FROM my_table;

* 6.3.1.1
SELECT 'This is a string.';
SELECT 'You''re welcome.';

-- Oracle
SELECT 'This is a string.' FROM dual;
SELECT 'You''re welcome.' FROM dual;

* 6.3.1.2
-- Oracle
SELECT Q'[You're welcome.]' FROM dual;
SELECT q'[You're welcome.]' FROM dual;
SELECT Q'|You're welcome.|' FROM dual;

-- PostgreSQL
SELECT $$You're welcome.$$;
SELECT $mytag$You're welcome.$mytag$;

* 6.3.1.3
-- MySQL
SELECT 'hello', 'he\'llo', '\thello';

-- PostgreSQL
SELECT 'hello', E'he\\llo', e'\thello';

* 6.3.2
DROP TABLE my_table;
CREATE TABLE my_table (
    my_character_column VARCHAR(50)
);

INSERT INTO my_table VALUES
    ('Here is some text.'),
    ('And some numbers - 1 2 3 4 5'),
    ('And some punctuation! :)');

-- Oracle
INSERT INTO my_table VALUES ('Here is some text.');
INSERT INTO my_table VALUES ('And some numbers - 1 2 3 4 5');
INSERT INTO my_table VALUES ('And some punctuation! :)');

SELECT * FROM my_table;

* 6.3.3
DROP TABLE my_table;

-- MySQL、SQL Server
CREATE TABLE my_table (
    varchar_text VARCHAR(20),
    unicode_text NVARCHAR(20)
);
INSERT INTO my_table VALUES
    ('あいう', 'あいう'),
    (N'你好', N'你好'),
    (N'♥♥♥', N'♥♥♥'),
    ('♥♥♥', '♥♥♥');

-- Oracle
CREATE TABLE my_table (
    varchar_text VARCHAR2(20),
    unicode_text NVARCHAR2(20)
);
INSERT INTO my_table VALUES ('あいう', 'あいう');
INSERT INTO my_table VALUES (N'你好', N'你好');
INSERT INTO my_table VALUES (N'♥♥♥', N'♥♥♥');
INSERT INTO my_table VALUES ('♥♥♥', '♥♥♥');

-- PostgreSQL
CREATE TABLE my_table (
    varchar_text VARCHAR(20),
    unicode_text VARCHAR(20)
);
INSERT INTO my_table VALUES
    ('あいう', 'あいう'),
    ('你好', '你好'),
    ('♥♥♥', '♥♥♥');

-- SQLite
CREATE TABLE my_table (
    varchar_text TEXT,
    unicode_text TEXT
);
INSERT INTO my_table VALUES
    ('あいう', 'あいう'),
    ('你好', '你好'),
    ('♥♥♥', '♥♥♥');

SELECT * FROM my_table;

* 6.4.1.1
表6-11：
-- MySQL
SELECT DATE '2021-02-25';
SELECT DATE('2021-02-25');
SELECT CAST('2021-02-25' AS DATE);

-- Oracle
SELECT DATE '2021-02-25' FROM dual;
SELECT CAST('2021-02-25' AS DATE) FROM dual;

-- PostgreSQL
SELECT DATE '2021-02-25';
SELECT DATE('2021-02-25');
SELECT CAST('2021-02-25' AS DATE);

-- SQL Server
SELECT CAST('2021-02-25' AS DATE);

-- SQLite
SELECT DATE('2021-02-25');

* 6.4.1.2
表6-12：
-- MySQL
SELECT TIME '10:30';
SELECT TIME('10:30');
SELECT CAST('10:30' AS TIME);

-- Oracle
SELECT TIME '10:30:00' FROM dual;
SELECT CAST('10:30' AS TIME) FROM dual;

-- PostgreSQL
SELECT TIME '10:30';
SELECT CAST('10:30' AS TIME);

-- SQL Server
SELECT CAST('10:30' AS TIME);

-- SQLite
SELECT TIME('10:30');

* 6.4.1.3
表6-13：
-- MySQL
SELECT TIMESTAMP '2021-02-25 10:30';
SELECT TIMESTAMP('2021-02-25 10:30');
SELECT CAST('2021-02-25 10:30' AS DATETIME);

-- Oracle
SELECT TIMESTAMP '2021-02-25 10:30:00' FROM dual;
SELECT CAST('2021-02-25 10:30' AS TIMESTAMP) FROM dual;

-- PostgreSQL
SELECT TIMESTAMP '2021-02-25 10:30';
SELECT CAST('2021-02-25 10:30' AS TIMESTAMP);

-- SQL Server
SELECT CAST('2021-02-25 10:30' AS DATETIME);

-- SQLite
SELECT DATETIME('2021-02-25 10:30');

* 6.4.2.1  MySQL
DROP TABLE my_table;
CREATE TABLE my_table (
    dt DATE,
    tm TIME,
    dttm DATETIME,
    ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    yr YEAR
);

INSERT INTO my_table (dt, tm, dttm, yr)
    VALUES ('21-7-4', '6:30',
            '2021-12-25 7:00:01', 2021);

SELECT * FROM my_table;

* 6.4.2.2  Oracle
DROP TABLE my_table;
CREATE TABLE my_table (
    dt DATE,
    ts TIMESTAMP,
    ts_tz TIMESTAMP WITH TIME ZONE,
    ts_lc TIMESTAMP WITH LOCAL TIME ZONE
);

INSERT INTO my_table VALUES (
    '2021-07-04', '2021-07-04 6:30',
    '2021-07-04 6:30:45 CST', '2021-07-04 6:30'
);

SELECT * FROM my_table;

* 6.4.2.3  Oracle
SELECT value
FROM nls_session_parameters
WHERE parameter in ('NLS_DATE_FORMAT',
                    'NLS_TIMESTAMP_FORMAT');

ALTER SESSION
SET NLS_DATE_FORMAT = 'YYYY-MM-DD HH:MI:SS';

* 6.4.2.4  PostgreSQL
DROP TABLE my_table;
CREATE TABLE my_table (
    dt DATE,
    tm TIME,
    tm_tz TIME WITH TIME ZONE,
    ts TIMESTAMP,
    ts_tz TIMESTAMP WITH TIME ZONE
);

INSERT INTO my_table VALUES (
    '2021-7-4', '6:30', '6:30 CST',
    '2021-12-25 7:00:01', '2021-12-25 7:00:01 CST'
);

SELECT * FROM my_table;

* 6.4.2.5  SQL Server
DROP TABLE my_table;
CREATE TABLE my_table (
    dt DATE,
    tm TIME,
    dttm_sm SMALLDATETIME,
    dttm DATETIME,
    dttm2 DATETIME2,
    dttm_off DATETIMEOFFSET
);

INSERT INTO my_table VALUES (
    '2021-7-4', '6:30', '2021-12-25 7:00:01',
    '2021-12-25 7:00:01', '2021-12-25 7:00:01',
    '2021-12-25 7:00:01-06:00'
);

SELECT * FROM my_table;

* 6.4.2.6  SQLite
DROP TABLE my_table;
CREATE TABLE my_table (
    dt_text TEXT,
    dt_real REAL,
    dt_integer INTEGER
);

INSERT INTO my_table VALUES (
    '2021-12-25 7:00:01',
    '2021-12-25 7:00:01',
    '2021-12-25 7:00:01'
);

SELECT * FROM my_table;

* 6.5.1
-- MySQL、PostgreSQL、SQLite
SELECT TRUE, True, FALSE, False;

* 6.5.1.1
DROP TABLE my_table;

-- MySQL、SQLite
CREATE TABLE my_table (
    my_boolean_column BOOLEAN
);
INSERT INTO my_table VALUES
    (TRUE),
    (false),
    (1);

-- PostgreSQL
CREATE TABLE my_table (
    my_boolean_column BOOLEAN
);
INSERT INTO my_table VALUES
    (TRUE),
    (false),
    ('1'),
    ('true'),
    ('F');

SELECT * FROM my_table;

* 6.5.2.1
-- MySQL
SELECT X'AF12', x'AF12', 0xAF12;

-- PostgreSQL
SELECT X'AF12', x'AF12', 0xAF12;
SELECT '\xAF12';

-- SQL Server
SELECT 0xAF12;

-- Oracle
SELECT TO_NUMBER('AF12', 'XXXX') FROM dual;

-- SQLite
SELECT X'AF12', x'AF12', 0xAF12;


* 6.5.2.2
DROP TABLE my_table;

-- MySQL、SQLite
CREATE TABLE my_table (
    my_binary_column BLOB
);
INSERT INTO my_table VALUES
    ('a'),
    ('aaa'),
    ('ae$ iou');

-- Oracle
CREATE TABLE my_table (
    my_binary_column BLOB
);
INSERT INTO my_table SELECT RAWTOHEX('a') FROM dual;
INSERT INTO my_table SELECT RAWTOHEX('aaa') FROM dual;
INSERT INTO my_table SELECT RAWTOHEX('ae$ iou') FROM dual;

-- PostgreSQL
CREATE TABLE my_table (
    my_binary_column BYTEA
);
INSERT INTO my_table VALUES
    ('a'),
    ('aaa'),
    ('ae$ iou');

-- SQL Server
CREATE TABLE my_table (
    my_binary_column VARBINARY(100)
);
INSERT INTO my_table SELECT CONVERT(VARBINARY, 'a');
INSERT INTO my_table SELECT CONVERT(VARBINARY, 'aaa');
INSERT INTO my_table SELECT CONVERT(VARBINARY, 'ae$ iou');

SELECT * FROM my_table;

-- SQLite
SELECT HEX(my_binary_column) FROM my_table;


-- MySQL
INSERT INTO my_table VALUES (X'AF12');
INSERT INTO my_table VALUES (x'AF12');
INSERT INTO my_table VALUES (0xAF12);

-- Oracle
INSERT INTO my_table SELECT HEXTORAW('AF12') FROM dual;

-- SQL Server
INSERT INTO my_table VALUES (0xAF12);

-- PostgreSQL
INSERT INTO my_table VALUES ('\xAF12');

-- SQLite
INSERT INTO my_table VALUES (X'AF12');
INSERT INTO my_table VALUES (x'AF12');

SELECT * FROM my_table;

